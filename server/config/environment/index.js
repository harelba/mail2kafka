'use strict';

var path = require('path');
var _ = require('lodash');

function requiredProcessEnv(name) {
  if (!process.env[name]) {
    throw new Error('You must set the ' + name + ' environment variable');
  }
  return process.env[name];
}

// All configurations will extend these options
// ============================================
var all = {
  env: process.env.NODE_ENV,

  // Root path of server
  root: path.normalize(__dirname + '/../../..'),

  // Server port
  port: process.env.PORT || 9000,

  // Server IP
  ip: process.env.IP || '0.0.0.0',

  // Should we populate the DB with sample data?
  seedDB: false,

  // Secret for session, you will want to change this and make it an environment variable
  secrets: {
    session: 'src-secret'
  },

  // MongoDB connection options
  mongo: {
    options: {
      db: {
        safe: true
      }
    }
  },

  facebook: {
    clientID:     process.env.FACEBOOK_ID || 'id',
    clientSecret: process.env.FACEBOOK_SECRET || 'secret',
    callbackURL:  (process.env.DOMAIN || '') + '/auth/facebook/callback'
  },

  twitter: {
    clientID:     process.env.TWITTER_ID || 'id',
    clientSecret: process.env.TWITTER_SECRET || 'secret',
    callbackURL:  (process.env.DOMAIN || '') + '/auth/twitter/callback'
  },

  google: {
    clientID:     process.env.GOOGLE_ID || 'id',
    clientSecret: process.env.GOOGLE_SECRET || 'secret',
    callbackURL:  (process.env.DOMAIN || '') + '/auth/google/callback'
  },

  // Application config
  // TODO should be moved out of here
  
  // SMTP port to listen to
  smtpPort : 2526,
  // Kakfa configuration
  kafka : {
	  zk : { 
		       // Zookeeper connection path
		       connectionString : "localhost:2181",
		       // Zookeeper session timeout
		       sessionTimeout : 30000, 
		       // Delay between reconnections
		       spinDelay : 1000 , 
		       // Number of retries to reconnect
		       retries : 0 
	       },
	  // Topic to publish email details to
	  outputTopic : 'incoming-emails',
	  // Kafka client id - If null, will be autogenerated
	  clientId : null,
	  // Mode of publishing to kafka
	  requireAcks : {
		  // Are acks required? (safe vs fast), either 1 or 0
		  acksRequired : 1,
		  // Timeout for acks if required
		  ackTimeoutMs : 200,
		  // If no acks required, then batch size of messages before sending (otherwise null)
		  noAckBatchSize : null,
                  // If no acks required, then max age of messages before sending (otherwise null)
		  noAckBatchAge : null
	  },
	  // Type of partitioner - should be 0, will be used in the future perhaps
	  partitionerType : 0
  	}
};

// Export the config object based on the NODE_ENV
// ==============================================
module.exports = _.merge(
  all,
  require('./shared'),
  require('./' + process.env.NODE_ENV + '.js') || {});
